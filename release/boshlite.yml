---
 - hosts: blbox
   remote_user: ubuntu
   vars:
     stemcell_uri: https://bosh-jenkins-artifacts.s3.amazonaws.com/bosh-stemcell/warden/bosh-stemcell-3-warden-boshlite-ubuntu-trusty-go_agent.tgz
     bp: source /home/ubuntu/.boilerplate-src.sh &&
     rel: 173
     lastchar: sed 's/^.*\(.\)$/\1/'
     workdir: /opt/packages
   tasks:
    - name: Install the os deps
      sudo: true
      tags: repos
      apt: pkg={{item}} state=present update_cache=yes
      with_items:
        - tmux
        - emacs
        - git
        - unzip
        - python-virtualenv
        - python-dev

    - name: opt dir
      sudo: true
      file: path=/opt state=directory

    - name: work dir
      sudo: true
      file: path={{workdir}} state=directory owner=ubuntu group=ubuntu

    - name: install raindance
      sudo: true
      pip: name='git+https://github.com/whitmo/raindance.git#egg=raindance' virtualenv={{workdir}}
    - set_fact: workon='source {{workdir}}/bin/activate &&'

    - name: boshlite checkout
      sudo: true
      git: repo=https://github.com/cloudfoundry/bosh-lite.git dest=/opt/boshlite depth=1

    - name: fetch spiff
      sudo: true
      get_url: url=https://github.com/cloudfoundry-incubator/spiff/releases/download/v1.0/spiff_linux_amd64.zip dest=/opt/spiff.zip

    - name: unzip spiff
      sudo: true
      command: unzip /opt/spiff.zip chdir=/usr/bin creates=/usr/bin/spiff creates=/usr/bin/spiff

    - name: cf-release checkout
      sudo: true
      git: repo=https://github.com/cloudfoundry/cf-release.git
           dest=/opt/cf-release

    - name: fix ownership for cf-release
      sudo: true
      command: chown -R ubuntu:ubuntu /opt/cf-release

    - name: fix ownership for bosh-lite
      sudo: true
      command: chown -R ubuntu:ubuntu /opt/boshlite

    - name: fix ownership for packages
      sudo: true
      command: chown -R ubuntu:ubuntu {{workdir}}

    - name: update release
      shell: git checkout master && git pull --rebase  && ./update chdir=/opt/cf-release

    - name: cf-release checkout release
      command: git checkout v{{rel}} chdir=/opt/cf-release

    - name: boilerplate source
      template: src=ec2-setup/bosh-boilerplate-src.sh dest=/home/ubuntu/.boilerplate-src.sh

    - name: add rbenv to bashrc
      lineinfile: dest=/home/ubuntu/.bashrc line=". ~/.boilerplate-src.sh"

    - name: bosh_config
      sudo: true
      file: path=/home/ubuntu/.bosh_config owner=ubuntu group=ubuntu

    - name: target bosh locally
      shell: "{{bp}} bosh target localhost
             executable=/bin/bash"

    - name: check stemcell count
      sudo: true
      shell: ls /opt/warden/stemcells | wc -w
      register: stemcell_count

    - name: upload stemcell to bosh
      shell: "{{bp}} bosh upload stemcell {{stemcell_uri}}
             executable=/bin/bash"
      when: stemcell_count.rc == 0 and stemcell_count.stdout == 0
      async: 60

    - name: check releases
      shell: "{{bp}} bosh releases | tail -1 | {{lastchar}}
              executable=/bin/bash"
      register: howmany_rel

    - name: upload release to bosh
      shell: "{{bp}} bosh upload release releases/cf-{{rel}}.yml
             chdir=/opt/cf-release
             executable=/bin/bash"
      when: "howmany_rel.stdout < 2"
      async: 120
      poll: 20

    - name: spiff up manifest
      shell: "{{bp}} ./scripts/make_manifest_spiff
             chdir=/opt/boshlite
             executable=/bin/bash"

    - name: edit manifest
      replace: dest=/opt/boshlite/manifests/cf-manifest.yml
               regexp=lucid
               replace=trusty

    - name: upload manifest
      shell: "{{bp}} bosh deployment /opt/boshlite/manifests/cf-manifest.yml
              executable=/bin/bash"

    - name: check for packages.tar.gz
      file: path={{workdir}}/packages.tar.gz state=file
      register: pkgtgz

    - name: grab name of bungled export
      shell: ls -1 /tmp/compiled_packages | tail -1
      register: cpcname

    - set_fact:
        pkg_exists: "{{pkgtgz.state}} == 'file'"
        cpc_tgz: "{{cpcname.stdout}}"

    - name: run deploy
      shell: "{{bp}} bosh deploy -n executable=/bin/bash"
      async: 600
      poll: 50
      when: not cpc_tgz and not pkg_exists

    - name: run export
      shell: "{{bp}} bosh export compiled_packages cf/{{rel}} bosh-warden-boshlite-ubuntu-trusty-go_agent/3 {{workdir}}"
      async: 600
      poll: 50
      when: not cpc_tgz and not pkg_exists

    - name: place file
      sudo: true
      command: cp /tmp/compiled_packages/{{cpc_tgz}} {{workdir}}/packages.tar.gz creates={{workdir}}/packages.tar.gz

    - name: fix ownership
      sudo: true
      file: path={{workdir}}/packages.tar.gz owner=ubuntu group=ubuntu

    - name: process export
      shell: "{{bp}} rd -p /opt/cf-release pack-jobs --workdir={{workdir}}/out {{workdir}}/packages.tar.gz
              executable=/bin/bash"

    - name: upload jobs to s3
      shell: "{{bp}} s3-paraput
              --content-type=application/x-tar
              --grant=public-read
              --prefix=cf-{{rel}}/amd64
              --bucket=cf-compiled-packages
              ./
              chdir={{workdir}}/out/artefacts
              executable=/bin/bash"
